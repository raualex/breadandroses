// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HearingsContainer should match the snapshot with house passed in 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HearingsContainer
    houseHearings={
      Array [
        Object {
          "title": "Hearing 1",
          "url": "something.com",
        },
      ]
    }
    navClicked="house"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="hearing-end"
        >
          <p
            className="hearing-title"
          >
            Hearing 1
          </p>
          <p>
            <a
              href="something.com"
              rel="noopener noreferrer"
              target="_blank"
            >
              something.com
            </a>
          </p>
        </div>,
      ],
      "className": "hearings-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p
              className="hearing-title"
            >
              Hearing 1
            </p>,
            <p>
              <a
                href="something.com"
                rel="noopener noreferrer"
                target="_blank"
              >
                something.com
              </a>
            </p>,
          ],
          "className": "hearing-end",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Hearing 1",
              "className": "hearing-title",
            },
            "ref": null,
            "rendered": "Hearing 1",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <a
                href="something.com"
                rel="noopener noreferrer"
                target="_blank"
              >
                something.com
              </a>,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "something.com",
                "href": "something.com",
                "rel": "noopener noreferrer",
                "target": "_blank",
              },
              "ref": null,
              "rendered": "something.com",
              "type": "a",
            },
            "type": "p",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="hearing-end"
          >
            <p
              className="hearing-title"
            >
              Hearing 1
            </p>
            <p>
              <a
                href="something.com"
                rel="noopener noreferrer"
                target="_blank"
              >
                something.com
              </a>
            </p>
          </div>,
        ],
        "className": "hearings-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p
                className="hearing-title"
              >
                Hearing 1
              </p>,
              <p>
                <a
                  href="something.com"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  something.com
                </a>
              </p>,
            ],
            "className": "hearing-end",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Hearing 1",
                "className": "hearing-title",
              },
              "ref": null,
              "rendered": "Hearing 1",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <a
                  href="something.com"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  something.com
                </a>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "something.com",
                  "href": "something.com",
                  "rel": "noopener noreferrer",
                  "target": "_blank",
                },
                "ref": null,
                "rendered": "something.com",
                "type": "a",
              },
              "type": "p",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`HearingsContainer should match the snapshot with nothing passed in 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HearingsContainer
    navClicked=""
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Loading />,
      "className": "hearings-container",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {},
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Loading />,
        "className": "hearings-container",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`HearingsContainer should match the snapshot with senate passed in 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <HearingsContainer
    navClicked="senate"
    senateHearings={
      Array [
        Object {
          "title": "Hearing 1",
          "url": "something.com",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="hearing-end"
        >
          <p
            className="hearing-title"
          >
            Hearing 1
          </p>
          <p>
            something.com
          </p>
        </div>,
      ],
      "className": "hearings-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <p
              className="hearing-title"
            >
              Hearing 1
            </p>,
            <p>
              something.com
            </p>,
          ],
          "className": "hearing-end",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Hearing 1",
              "className": "hearing-title",
            },
            "ref": null,
            "rendered": "Hearing 1",
            "type": "p",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "something.com",
            },
            "ref": null,
            "rendered": "something.com",
            "type": "p",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="hearing-end"
          >
            <p
              className="hearing-title"
            >
              Hearing 1
            </p>
            <p>
              something.com
            </p>
          </div>,
        ],
        "className": "hearings-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p
                className="hearing-title"
              >
                Hearing 1
              </p>,
              <p>
                something.com
              </p>,
            ],
            "className": "hearing-end",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Hearing 1",
                "className": "hearing-title",
              },
              "ref": null,
              "rendered": "Hearing 1",
              "type": "p",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "something.com",
              },
              "ref": null,
              "rendered": "something.com",
              "type": "p",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
