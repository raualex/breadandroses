// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Loading should match the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Loading />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="star-container2"
      >
        <img
          alt="star"
          className="star2"
          src="back_star.png"
        />
        <img
          alt="fist"
          className="fist2"
          src="power.svg"
        />
      </div>,
      "className": "sun-container2",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            alt="star"
            className="star2"
            src="back_star.png"
          />,
          <img
            alt="fist"
            className="fist2"
            src="power.svg"
          />,
        ],
        "className": "star-container2",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "star",
            "className": "star2",
            "src": "back_star.png",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "fist",
            "className": "fist2",
            "src": "power.svg",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="star-container2"
        >
          <img
            alt="star"
            className="star2"
            src="back_star.png"
          />
          <img
            alt="fist"
            className="fist2"
            src="power.svg"
          />
        </div>,
        "className": "sun-container2",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="star"
              className="star2"
              src="back_star.png"
            />,
            <img
              alt="fist"
              className="fist2"
              src="power.svg"
            />,
          ],
          "className": "star-container2",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "star",
              "className": "star2",
              "src": "back_star.png",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "fist",
              "className": "fist2",
              "src": "power.svg",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
